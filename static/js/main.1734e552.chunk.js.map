{"version":3,"sources":["components/GetMovies.js","components/Child.js","components/Home.js","App.js","index.js"],"names":["GetMovies","useState","data","setData","query","setQuery","error","setError","handleSubmit","e","preventDefault","fetch","then","response","json","movies","catch","console","className","type","placeholder","value","onChange","target","onClick","Response","totalResults","Search","map","movie","key","imdbID","Poster","src","alt","Title","s","Type","charAt","toUpperCase","slice","Year","to","Error","Child","stringToSplit","separator","movieRating","id","useParams","setMovie","useEffect","imdbRating","Rated","Plot","Actors","split","actor","index","BoxOffice","Ratings","rating","Source","Value","Home","App","basename","activeClassName","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1734e552.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst GetMovies = () => {\r\n    const [data, setData] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    function capitalize(s) {\r\n        return (typeof s !== 'string') ? '' : s.charAt(0).toUpperCase() + s.slice(1);\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    function isEmpty(q) {\r\n        return (q === '') ? setError('You must fill in the fields.') : setError('');\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        isEmpty(query);\r\n        fetch(`https://www.omdbapi.com/?s=${query}&apikey=9f56ec01`)\r\n            .then(response => response.json())\r\n            .then(movies => setData(movies))\r\n            .catch(error => console.error(error));\r\n    }\r\n\r\n    function check() {\r\n        return data.Response === \"True\" ?\r\n            <div>\r\n                <h1 className=\"centered\">Total Results : {data.totalResults}</h1>\r\n                    <div className=\"row\">\r\n                        {data.Search.map((movie) =>\r\n                            <div className=\"block column\" key={movie.imdbID}>\r\n                                {movie.Poster !== 'N/A' ? <img className=\"negative-m-poster\" src={movie.Poster} alt=\"movie-poster\" /> : <div>Sorry, no image.</div>}\r\n                                <div className=\"block-item\">\r\n                                    <div><strong>{movie.Title}</strong></div>\r\n                                    <div>{capitalize(movie.Type)}</div>\r\n                                    <div>{movie.Year}</div>\r\n                                    <Link className=\"view-movie-btn\" to={`movie/${movie.imdbID}`}>View</Link>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            </div>\r\n            : data.Error === \"Movie not found!\" ? <div className=\"centered mt\">There doesn't seem to be a movie with this title.</div>\r\n                : data.Error === \"Something went wrong.\" && !handleSubmit ? <div className=\"centered mt\">Something went wrong.</div>\r\n                    : data.Error === \"Too many results.\" ? <div className=\"centered mt\">Too many results. OMDB can't fetch.</div>\r\n                        : <div className=\"centered mt\">Search for a title.</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"centered\">\r\n                <div className=\"error\">{error}</div>\r\n                <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search OMBD Database\"\r\n                    value={query}\r\n                    onChange={handleChange}\r\n                />\r\n                <button className=\"mt\" onClick={handleSubmit}>Search</button>\r\n            </form>\r\n            {check()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetMovies;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Child = () => {\r\n    const { id } = useParams();\r\n    const [movie, setMovie] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://www.omdbapi.com/?i=${id}&apikey=9f56ec01`)\r\n            .then(response => response.json())\r\n            .then(movie => setMovie(movie))\r\n            .catch(error => console.error(error));\r\n    }, [id]);\r\n\r\n    function splitString(stringToSplit, separator) {\r\n        const arrayOfStrings = stringToSplit.split(separator);\r\n        return arrayOfStrings;\r\n    };\r\n\r\n    function starRating(movieRating) {\r\n        return (movieRating <= 2) ?\r\n            <div>\r\n                <span className=\"fa fa-star checked\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n            </div>\r\n            : movieRating <= 4 ?\r\n                <div>\r\n                    <span className=\"fa fa-star checked\"></span>\r\n                    <span className=\"fa fa-star checked\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                </div>\r\n                : movieRating <= 6 ?\r\n                    <div>\r\n                        <span className=\"fa fa-star checked\"></span>\r\n                        <span className=\"fa fa-star checked\"></span>\r\n                        <span className=\"fa fa-star checked\"></span>\r\n                        <span className=\"fa fa-star\"></span>\r\n                        <span className=\"fa fa-star\"></span>\r\n                    </div>\r\n                    : movieRating <= 8 ?\r\n                        <div>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star\"></span>\r\n                        </div>\r\n                        : <div>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"centered max-movie-width flex-container\">\r\n                <div className=\"movie-container\">\r\n                    <img className=\"movie-img\" src={movie.Poster} alt=\"movie-poster\" />\r\n                    <div>{movie.Title}</div>\r\n                    {starRating(movie.imdbRating)}\r\n                    <div>Rated: {movie.Rated}</div>\r\n                    <div className=\"tb-border\">\r\n                        <div className=\"title\"><strong>Plot</strong></div>\r\n                        <div className=\"movie-paragraph\">{movie.Plot}</div>\r\n                    </div>\r\n                    <div className=\"tb-border\">\r\n                        <div className=\"title\"><strong>Actors</strong></div>\r\n                        <div className=\"movie-paragraph\">{movie.Actors && splitString(movie.Actors, ',').map((actor, index) => {\r\n                            return <div key={index}>{actor}</div>\r\n                        })}</div>\r\n                    </div>\r\n                    <div className=\"tb-border\">\r\n                        <div className=\"title\"><strong>Box Office</strong></div>\r\n                        {(movie.BoxOffice) ? <div>{movie.BoxOffice}</div> : <div>N/A</div>}\r\n                    </div>\r\n                    <div className=\"tb-border\">\r\n                        <div className=\"title\"><strong>Ratings</strong></div>\r\n                        {movie.Ratings && movie.Ratings.map((rating, index) => {\r\n                            return <div key={index}>{rating.Source} : {rating.Value}</div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Child;","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className=\"hero\">\r\n      <div className=\"inner-text\">\r\n        <div>Welcome to Moovy!</div>\r\n        <p>Search movies for ratings, plot, actors, box-office, and more.</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport GetMovies from './components/GetMovies';\nimport Child from './components/Child';\nimport Home from './components/Home';\n\nimport {\n  BrowserRouter as HashRouter,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <HashRouter basename='/'>\n      <div>\n        <ul className=\"centered nav-links lists\">\n          <li>\n            <NavLink activeClassName=\"selected\" exact={true} to=\"/\">Home</NavLink>\n          </li>\n        </ul>\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n            <GetMovies />\n          </Route>\n          <Route path=\"/movie/:id\" component={Child} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}