{"version":3,"sources":["components/LoadingSpinner.js","components/GetMovies.js","components/Child.js","components/Home.js","App.js","index.js"],"names":["Loading","style","textAlign","className","GetMovies","useState","data","setData","isLoaded","setIsLoaded","query","setQuery","bool","message","error","setError","handleSubmit","e","a","preventDefault","fetch","response","status","json","toJson","console","log","type","placeholder","value","onChange","target","onClick","totalResults","Search","map","movie","key","imdbID","Poster","src","alt","Title","s","Type","charAt","toUpperCase","slice","Year","to","Response","Error","Child","stringToSplit","separator","movieRating","id","useParams","setMovie","useEffect","getMovie","imdbRating","Rated","Plot","Actors","split","actor","index","BoxOffice","Ratings","rating","Source","Value","Home","role","aria-label","App","activeClassName","exact","path","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAOeA,G,MAJC,WACZ,OAAO,yBAAKC,MAAO,CAAEC,UAAW,UAAYC,UAAU,UAA/C,gBC0EIC,EA1EG,WAAO,IAAD,EACIC,mBAAS,IADb,mBACbC,EADa,KACPC,EADO,OAEYF,mBAAS,MAFrB,mBAEbG,EAFa,KAEHC,EAFG,OAGMJ,mBAAS,IAHf,mBAGbK,EAHa,KAGNC,EAHM,OAIMN,mBAAS,CAC/BO,MAAM,EACNC,QAAS,KANO,mBAIbC,EAJa,KAINC,EAJM,KAqBdC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACjBT,GAAY,GACZQ,EAAEE,iBALkBJ,EAAN,KAMNL,EANqB,CAAEE,MAAM,EAAMC,QAAS,gCAA6C,CAAED,MAAM,EAAOC,QAAS,KAGxG,kBAKUO,MAAM,8BAAD,OAA+BV,EAA/B,qBALf,UAMW,OADlBW,EALO,QAMAC,OANA,wBAOTb,GAAY,GAPH,UAQYY,EAASE,OARrB,QAQHC,EARG,OASTC,QAAQC,IAAIF,GACZjB,EAAQiB,GAVC,0DAabC,QAAQX,MAAR,MACAC,EAAS,CAAEH,MAAM,EAAMC,QAAS,0BAdnB,0DAAH,sDAkBlB,OACI,6BACI,0BAAMV,UAAU,YACZ,yBAAKA,UAAU,SAASW,EAAMD,SAC9B,2BACIV,UAAU,aACVwB,KAAK,OACLC,YAAY,gBACZC,MAAOnB,EACPoB,SAnCK,SAACb,GAClBN,EAASM,EAAEc,OAAOF,UAoCV,4BAAQ1B,UAAU,KAAK6B,QAAShB,GAAhC,YAEU,IAAbR,IAAqC,IAAfM,EAAMF,KAAiB,kBAAC,EAAD,MAC1C,8BACkB,IAAbJ,IAAoC,IAAfM,EAAMF,MAAkB,wBAAIT,UAAU,YAAd,mBAA0CG,EAAK2B,cAAgB,GAC7G,yBAAK9B,UAAU,OACVG,EAAK4B,QAAU5B,EAAK4B,OAAOC,KAAI,SAACC,GAAD,OAC5B,yBAAKjC,UAAU,eAAekC,IAAKD,EAAME,QACnB,QAAjBF,EAAMG,OAAmB,yBAAKpC,UAAU,oBAAoBqC,IAAKJ,EAAMG,OAAQE,IAAI,iBAAoB,iDACxG,yBAAKtC,UAAU,cACX,6BAAK,gCAASiC,EAAMM,QACpB,6BAnDP,kBADLC,EAoD6BP,EAAMQ,MAnDlB,GAAKD,EAAEE,OAAO,GAAGC,cAAgBH,EAAEI,MAAM,IAoD9C,6BAAMX,EAAMY,MACZ,kBAAC,IAAD,CAAM7C,UAAU,iBAAiB8C,GAAE,UAAKb,EAAME,SAA9C,UAtDb,IAACK,KA0DCrC,EAAK4C,UAA2B,qBAAf5C,EAAK6C,OAAgC,gF,OCoChEC,EAvGD,WAAO,IAqBIC,EAAeC,EAKhBC,EAzBZC,EAAOC,cAAPD,GADQ,EAEUnD,mBAAS,IAFnB,mBAET+B,EAFS,KAEFsB,EAFE,OAGgBrD,oBAAS,GAHzB,mBAGTG,EAHS,KAGCC,EAHD,KAoEhB,OA/DAkD,qBAAU,YACQ,uCAAG,8BAAAzC,EAAA,+EAEcE,MAAM,8BAAD,OAA+BoC,EAA/B,qBAFnB,UAGe,OADlBnC,EAFG,QAGIC,OAHJ,iCAIgBD,EAASE,OAJzB,OAICC,EAJD,OAKLkC,EAASlC,GACTf,GAAY,GANP,0DASTgB,QAAQX,MAAR,MATS,kEAAH,qDAYd8C,KACD,CAACJ,IAkDA,8BACkB,IAAbhD,EAAqB,kBAAC,EAAD,MAChB,yBAAKL,UAAU,2CACb,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,YAAYqC,IAAKJ,EAAMG,OAAQE,IAAI,iBAClD,6BAAML,EAAMM,QAhDZa,EAiDYnB,EAAMyB,aAhDX,EACnB,6BACI,0BAAM1D,UAAU,uBAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,gBAElBoD,GAAe,EACb,6BACI,0BAAMpD,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,gBAElBoD,GAAe,EACb,6BACI,0BAAMpD,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,eAChB,0BAAMA,UAAU,gBAElBoD,GAAe,EACb,6BACI,0BAAMpD,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,gBAElB,6BACE,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,uBAChB,0BAAMA,UAAU,wBAYpB,uCAAaiC,EAAM0B,OACnB,yBAAK3D,UAAU,aACX,yBAAKA,UAAU,SAAQ,yCACvB,yBAAKA,UAAU,mBAAmBiC,EAAM2B,OAE5C,yBAAK5D,UAAU,aACX,yBAAKA,UAAU,SAAQ,2CACvB,yBAAKA,UAAU,mBAAmBiC,EAAM4B,SA9D3CX,EA8DiEjB,EAAM4B,OA9DxDV,EA8DgE,IA7DzED,EAAcY,MAAMX,IA6D0DnB,KAAI,SAAC+B,EAAOC,GACzF,OAAO,yBAAK9B,IAAK8B,GAAQD,QAGjC,yBAAK/D,UAAU,aACX,yBAAKA,UAAU,SAAQ,+CACrBiC,EAAMgC,UAAa,6BAAMhC,EAAMgC,WAAmB,qCAExD,yBAAKjE,UAAU,aACX,yBAAKA,UAAU,SAAQ,4CACtBiC,EAAMiC,SAAWjC,EAAMiC,QAAQlC,KAAI,SAACmC,EAAQH,GACzC,OAAO,yBAAK9B,IAAK8B,GAAQG,EAAOC,OAAzB,MAAoCD,EAAOE,eCrFnEC,EAXF,WACX,OACE,6BAAStE,UAAU,QACjB,yBAAKA,UAAU,cACb,sDAA2B,0BAAMuE,KAAK,MAAMC,aAAW,SAA5B,iBAC3B,gGC0BOC,EArBH,WACV,OACE,kBAAC,IAAD,KACE,6BACE,wBAAIzE,UAAU,4BACZ,4BACE,kBAAC,IAAD,CAAS0E,gBAAgB,WAAWC,OAAO,EAAM7B,GAAG,KAApD,UAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,OAAOC,SAAU,kBAAC,EAAD,YCrBvCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3b8872b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\nconst Loading = () => {\r\n    return <div style={{ textAlign: 'center' }} className=\"loader\">Loading...</div>;\r\n};\r\n\r\nexport default Loading;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from './LoadingSpinner';\r\n\r\nconst GetMovies = () => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [error, setError] = useState({\r\n        bool: false,\r\n        message: ''\r\n    });\r\n\r\n    const capitalize = (s) => {\r\n        return (typeof s !== 'string') ? '' : s.charAt(0).toUpperCase() + s.slice(1);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const isEmpty = (q) => {\r\n        return (q === '') ? setError({ bool: true, message: 'You must fill in the fields.' }) : setError({ bool: false, message: '' });\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        setIsLoaded(false);\r\n        e.preventDefault();\r\n        isEmpty(query);\r\n        try {\r\n            const response = await fetch(`https://www.omdbapi.com/?s=${query}&apikey=9f56ec01`)\r\n            if (response.status === 200) {\r\n                setIsLoaded(true);\r\n                const toJson = await response.json();\r\n                console.log(toJson);\r\n                setData(toJson)\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            setError({ bool: true, message: 'Something went wrong!' })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"centered\">\r\n                <div className=\"error\">{error.message}</div>\r\n                <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search Movies\"\r\n                    value={query}\r\n                    onChange={handleChange}\r\n                />\r\n                <button className=\"mt\" onClick={handleSubmit}>Search</button>\r\n            </form>\r\n            {isLoaded === false && error.bool === false ? <Spinner /> :\r\n                <div>\r\n                    {isLoaded === true && error.bool === false && <h1 className=\"centered\">Total Results : {data.totalResults || 0}</h1>}\r\n                    <div className=\"row\">\r\n                        {data.Search && data.Search.map((movie) =>\r\n                            <div className=\"block column\" key={movie.imdbID}>\r\n                                {movie.Poster !== 'N/A' ? <img className=\"negative-m-poster\" src={movie.Poster} alt=\"movie-poster\" /> : <div>Sorry, no image.</div>}\r\n                                <div className=\"block-item\">\r\n                                    <div><strong>{movie.Title}</strong></div>\r\n                                    <div>{capitalize(movie.Type)}</div>\r\n                                    <div>{movie.Year}</div>\r\n                                    <Link className=\"view-movie-btn\" to={`${movie.imdbID}`}>View</Link>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {data.Response && data.Error === 'Movie not found!' && <div>Sorry, there are no movies with that title.</div>}\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetMovies;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Spinner from './LoadingSpinner';\r\n\r\nconst Child = () => {\r\n    const { id } = useParams();\r\n    const [movie, setMovie] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getMovie = async () => {\r\n            try {\r\n                const response = await fetch(`https://www.omdbapi.com/?i=${id}&apikey=9f56ec01`);\r\n                if (response.status === 200) {\r\n                    const toJson = await response.json();\r\n                    setMovie(toJson);\r\n                    setIsLoaded(true);\r\n                };\r\n            } catch (error) {\r\n                console.error(error);\r\n            };\r\n        };\r\n        getMovie();\r\n    }, [id]);\r\n\r\n    function splitString(stringToSplit, separator) {\r\n        const arrayOfStrings = stringToSplit.split(separator);\r\n        return arrayOfStrings;\r\n    };\r\n\r\n    function starRating(movieRating) {\r\n        return (movieRating <= 2) ?\r\n            <div>\r\n                <span className=\"fa fa-star checked\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n                <span className=\"fa fa-star\"></span>\r\n            </div>\r\n            : movieRating <= 4 ?\r\n                <div>\r\n                    <span className=\"fa fa-star checked\"></span>\r\n                    <span className=\"fa fa-star checked\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                    <span className=\"fa fa-star\"></span>\r\n                </div>\r\n                : movieRating <= 6 ?\r\n                    <div>\r\n                        <span className=\"fa fa-star checked\"></span>\r\n                        <span className=\"fa fa-star checked\"></span>\r\n                        <span className=\"fa fa-star checked\"></span>\r\n                        <span className=\"fa fa-star\"></span>\r\n                        <span className=\"fa fa-star\"></span>\r\n                    </div>\r\n                    : movieRating <= 8 ?\r\n                        <div>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star\"></span>\r\n                        </div>\r\n                        : <div>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                            <span className=\"fa fa-star checked\"></span>\r\n                        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {isLoaded === false ? <Spinner />\r\n                : <div className=\"centered max-movie-width flex-container\">\r\n                    <div className=\"movie-container\">\r\n                        <img className=\"movie-img\" src={movie.Poster} alt=\"movie-poster\" />\r\n                        <div>{movie.Title}</div>\r\n                        {starRating(movie.imdbRating)}\r\n                        <div>Rated: {movie.Rated}</div>\r\n                        <div className=\"tb-border\">\r\n                            <div className=\"title\"><strong>Plot</strong></div>\r\n                            <div className=\"movie-paragraph\">{movie.Plot}</div>\r\n                        </div>\r\n                        <div className=\"tb-border\">\r\n                            <div className=\"title\"><strong>Actors</strong></div>\r\n                            <div className=\"movie-paragraph\">{movie.Actors && splitString(movie.Actors, ',').map((actor, index) => {\r\n                                return <div key={index}>{actor}</div>\r\n                            })}</div>\r\n                        </div>\r\n                        <div className=\"tb-border\">\r\n                            <div className=\"title\"><strong>Box Office</strong></div>\r\n                            {(movie.BoxOffice) ? <div>{movie.BoxOffice}</div> : <div>N/A</div>}\r\n                        </div>\r\n                        <div className=\"tb-border\">\r\n                            <div className=\"title\"><strong>Ratings</strong></div>\r\n                            {movie.Ratings && movie.Ratings.map((rating, index) => {\r\n                                return <div key={index}>{rating.Source} : {rating.Value}</div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Child;","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className=\"hero\">\r\n      <div className=\"inner-text\">\r\n        <div>Welcome to Filmatory! <span role=\"img\" aria-label=\"movie\">🎥</span></div>\r\n        <p>Search movies for ratings, plot, actors, box-office, and more.</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport GetMovies from './components/GetMovies';\nimport Child from './components/Child';\nimport Home from './components/Home';\n\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div>\n        <ul className=\"centered nav-links lists\">\n          <li>\n            <NavLink activeClassName=\"selected\" exact={true} to=\"/\">Home</NavLink>\n          </li>\n        </ul>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n            <GetMovies />\n          </Route>\n          <Route path=\"/:id\" children={<Child />} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}